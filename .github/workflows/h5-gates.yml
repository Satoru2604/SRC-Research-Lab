name: H5 Compliance Gate

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - 'feature/**'
      - 'hotfix/**'

jobs:
  h5_compliance_gate:
    name: h5_compliance_gate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # Ensure pytest is available
          pip install pytest pytest-cov

      - name: Install compliance tools
        run: |
          pip install bandit pip-audit pip-licenses

      - name: Run test suite
        id: tests
        run: |
          chmod +x scripts/run_tests.sh
          ./scripts/run_tests.sh
        continue-on-error: true
      
      - name: Run compliance checks
        id: compliance
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          chmod +x scripts/compliance_check.sh
          ./scripts/compliance_check.sh
        continue-on-error: true
      
      - name: Check private content exposure
        id: private_check
        run: |
          chmod +x scripts/check_private_exposure.sh
          ./scripts/check_private_exposure.sh
      
      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            /tmp/*.log
            pytest.log
          if-no-files-found: ignore

      - name: Upload compliance artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compliance-artifacts
          path: artifacts/
          if-no-files-found: ignore

      - name: Compliance gate summary
        if: always()
        run: |
          echo "=== H5 Compliance Gate Summary ==="
          echo ""
          echo "Tests: ${{ steps.tests.outcome }}"
          echo "Compliance: ${{ steps.compliance.outcome }}"
          echo "Private Exposure: ${{ steps.private_check.outcome }}"
          echo ""
          
          # Private exposure check is mandatory
          if [ "${{ steps.private_check.outcome }}" != "success" ]; then
            echo "❌ GATE FAILED: Private content exposure detected"
            exit 1
          fi
          
          # Compliance check failure is informational if placeholder
          if [ "${{ steps.compliance.outcome }}" == "failure" ]; then
            echo "⚠️  WARNING: Compliance checks failed"
            echo "This may be expected if using placeholder script."
            echo "See H5-05 in docs/H5-status-board.md for implementation plan."
          fi
          
          echo "✅ Critical gates passed"
          exit 0
      
      - name: Comment on PR (if failed)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **H5 Compliance Gate Failed**\n\n' +
                    'Please review the workflow logs and address the issues.\n\n' +
                    '**Common Issues:**\n' +
                    '- Private content detected (check scripts/check_private_exposure.sh output)\n' +
                    '- Compliance checks need implementation (see H5-05)\n' +
                    '- Test failures (review test logs)\n\n' +
                    '**References:**\n' +
                    '- [H5 Status Board](../blob/main/docs/H5-status-board.md)\n' +
                    '- [Private Content Policy](../blob/main/docs/ops/PRIVATE_CONTENT.md)\n' +
                    '- [Decision Log](../blob/main/docs/decision-log.md)'
            })
